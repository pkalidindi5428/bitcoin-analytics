devtools::install_github("jrowen/twitteR", ref = "oauth_httr_1_0")
consumer_key <- "4k6po72S9kb6uXZST70JGp1Su"
consumer_secret <- "cnFUs9JqXuKg48KKY6yD9qDQLL9aD4jRujbsO82q7dBUVYekJw"
access_token <- "1337968898-I548V0LNr0nELzNBY8RtND31wn3SwLOH5j7tE2A"
access_secret <- "TTpbYJPtzGZ2z0Xj7zeeQeqzeKVSbaMoolmBregjP9N9S"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
setup_twitter_oauth()
library('twitteR')
twitteR:::setup_twitter_oauth()
library(twitteR)
consumer_key <- "4k6po72S9kb6uXZST70JGp1Su"
consumer_secret <- "cnFUs9JqXuKg48KKY6yD9qDQLL9aD4jRujbsO82q7dBUVYekJw
"
access_token <- "1337968898-I548V0LNr0nELzNBY8RtND31wn3SwLOH5j7tE2A"
access_secret <- "TTpbYJPtzGZ2z0Xj7zeeQeqzeKVSbaMoolmBregjP9N9S
"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
library(twitteR)
consumer_key <- "ywFsJbhWTbRD3X8LETfEofI04"
consumer_secret <- "cEB0iAxu86HePswlLa2t9CbGGML3gZG1BdcDUysRNV1s7NYjHm"
access_token <- "1337968898-KRw75i8x02Hk3MxSy6pNQc9nKpIQAS3bKlDLPil"
access_secret <- "i9y6rcjPl3dm1BggfbPKmxRB7ZIgGGqL9CxQB9nTWpZPT"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
tw = twitteR::searchTwitter('#realDonaldTrump + #HillaryClinton', n = 1e4, since = '2016-11-08', retryOnRateLimit = 1e3)
d = twitteR::twListToDF(tw)
brexit_tweets=Get("https://api.twitter.com/1.1/search/tweets.json?q=brexit", sig)
tw = twitteR::searchTwitter('#realDonaldTrump + #HillaryClinton', n = 110, since = '2016-11-08', retryOnRateLimit = 10)
install.packages("rjson")
install.packages("rjson")
install.packages("gridExtra")
install.packages("lubridate")
library(twitteR)
libary(ggplot2)
library(ggplot2)
library(rjson)
library(gridExtra)
library(lubridate)
clinton_tweets <- userTimeline(user = "@HillaryClinton",n = 200, includeRts = FALSE, retryOnRateLimit = 2000)
clinton_tweets <- twListToDF(clinton_tweets)
textScrubber <- function(dataframe) {
dataframe$text <-  gsub("â€”", " ", dataframe$text)
dataframe$text <-  gsub("&", " ", dataframe$text)
dataframe$text <-  gsub("[[:punct:]]", " ", dataframe$text)
dataframe$text <-  gsub("[[:digit:]]", "", dataframe$text)
dataframe$text <-  gsub("http\\w+", "", dataframe$text)
dataframe$text <-  gsub("\n", " ", dataframe$text)
dataframe$text <-  gsub("[ \t]{2,}", "", dataframe$text)
dataframe$text <-  gsub("^\\s+|\\s+$", "", dataframe$text)
dataframe$text <-  tolower(dataframe$text)
return(dataframe)
}
clinton_tweets <- textScrubber(clinton_tweets)
tdmCreator <- function(dataframe, stemDoc = T, rmStopwords = T){
tdm <- Corpus(VectorSource(dataframe$text))
if (isTRUE(rmStopwords)) {
tdm <- tm_map(tdm, removeWords, stopwords())
}
if (isTRUE(stemDoc)) {
tdm <- tm_map(tdm, stemDocument)
}
tdm <- TermDocumentMatrix(tdm,
control = list(wordLengths = c(1, Inf)))
tdm <- rowSums(as.matrix(tdm))
tdm <- sort(tdm, decreasing = T)
df <- data.frame(term = names(tdm), freq = tdm)
return(df)
}
clinton_tweets <- tdmCreator(clinton_tweets)
library(lubridate)
library(ggplot2)
library(dplyr)
library(readr)
Cred$handshake(cainfo = system.file('CurlSSL', 'cacert.pem', package = 'RCurl'))
save(Cred, file='twitter authentication.Rdata')
load('twitter authentication.Rdata')
